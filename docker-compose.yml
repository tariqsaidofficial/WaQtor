version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: waqtor-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - API_KEY=${API_KEY:-your-api-key-here}
      - READONLY_FORK=false
    volumes:
      # Source code (for hot reload)
      - ./runtime:/app/runtime
      - ./src:/app/src
      - ./index.js:/app/index.js
      - ./shell.js:/app/shell.js
      # Persistent data
      - waqtor-sessions:/app/.wwebjs_auth
      - waqtor-cache:/app/.wwebjs_cache
      - waqtor-logs:/app/runtime/logs
      - waqtor-uploads:/app/uploads
      # Node modules (avoid overwriting)
      - /app/node_modules
    networks:
      - waqtor-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: npm run dev

  # Frontend Dashboard Service
  dashboard:
    build:
      context: .
      dockerfile: docker/Dockerfile.dashboard
    container_name: waqtor-dashboard
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8080
      - NEXT_PUBLIC_WS_URL=ws://backend:8080
      - NEXT_PUBLIC_API_KEY=${API_KEY:-your-api-key-here}
    volumes:
      # Source code (for hot reload)
      - ./dashboard:/app
      # Node modules (avoid overwriting)
      - /app/node_modules
      - /app/.next
    networks:
      - waqtor-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: npm run dev

  # Nginx Reverse Proxy (Optional - for production-like setup)
  nginx:
    image: nginx:alpine
    container_name: waqtor-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - waqtor-network
    depends_on:
      - backend
      - dashboard
    profiles:
      - production

volumes:
  waqtor-sessions:
    driver: local
  waqtor-cache:
    driver: local
  waqtor-logs:
    driver: local
  waqtor-uploads:
    driver: local

networks:
  waqtor-network:
    driver: bridge
