version: '3.8'

services:
  # Redis for Queue Management
  redis:
    image: redis:7-alpine
    container_name: waqtor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - waqtor-redis:/data
    networks:
      - waqtor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: redis-server --appendonly yes

  waqtor-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: waqtor-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - API_KEY=${API_KEY:-waqtor_change_me}
      - LOG_LEVEL=info
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - waqtor-sessions:/app/runtime/server/session
      - waqtor-db:/app/runtime/server/db
      - waqtor-logs:/app/runtime/logs
      - waqtor-auth:/app/.wwebjs_auth
      - waqtor-cache:/app/.wwebjs_cache
    networks:
      - waqtor-network
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: SQLite Web Viewer
  # Uncomment to enable web-based database viewer
  # waqtor-db-viewer:
  #   image: coleifer/sqlite-web
  #   container_name: waqtor-db-viewer
  #   restart: unless-stopped
  #   ports:
  #     - "8081:8080"
  #   volumes:
  #     - waqtor-db:/data
  #   environment:
  #     - SQLITE_DATABASE=/data/waqtor.db
  #   networks:
  #     - waqtor-network
  #   depends_on:
  #     - waqtor-api

volumes:
  waqtor-redis:
    driver: local
  waqtor-sessions:
    driver: local
  waqtor-db:
    driver: local
  waqtor-logs:
    driver: local
  waqtor-auth:
    driver: local
  waqtor-cache:
    driver: local

networks:
  waqtor-network:
    driver: bridge
